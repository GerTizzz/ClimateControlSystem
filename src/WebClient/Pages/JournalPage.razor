@page "/journalpage"
@using System.Globalization
@using WebClient.PaginationNavigation
@inject IForecastService ForecastService

<PageTitle>Journal Page</PageTitle>

<h3>Журнал прогнозов</h3>

<AuthorizeView>
    <Authorized>
        @if (_isInitialized is false)
        {
            <strong style="text-align:center; align-self:center">
                Загрузка...
            </strong>
        }
        else if (_forecastings is null || _forecastings.Any() is false)
        {
            <strong style="text-align:center; font-size:large">
                Нет данных для отображения...
            </strong>
        }
        else
        {
            <table class="table-bordered" align="center">
                <thead>
                <tr>
                    <th style="word-wrap:break-word; font-size:small; text-align:center">Время измерения</th>
                    <th style="word-wrap:break-word; font-size:small; text-align:center">Загрузка кластера</th>
                    <th style="word-wrap:break-word; font-size:small; text-align:center">Использование ЦПУ</th>
                    <th style="word-wrap:break-word; font-size:small; text-align:center">Температура кластера</th>
                    <th style="word-wrap:break-word; font-size:small; text-align:center">Влажность снаружи</th>
                    <th style="word-wrap:break-word; font-size:small; text-align:center">Сухая температура снаружи</th>
                    <th style="word-wrap:break-word; font-size:small; text-align:center">Влажная температура снаружи</th>
                    <th style="word-wrap:break-word; font-size:small; text-align:center">Скорость ветра снаружи</th>
                    <th style="word-wrap:break-word; font-size:small; text-align:center">Направления ветра снаружи</th>
                    <th style="word-wrap:break-word; font-size:small; text-align:center">Энтальпия воздуха снаружи</th>
                    <th style="word-wrap:break-word; font-size:small; text-align:center">Температура охлаждения</th>

                    <th style="word-wrap:break-word; font-size:small; text-align:center">Предыдущая температура воздуха</th>
                    <th style="word-wrap:break-word; font-size:small; text-align:center">Предыдущая влажность воздуха</th>

                    <th style="word-wrap:break-word; font-size:small; text-align:center">Температура воздуха</th>
                    <th style="word-wrap:break-word; font-size:small; text-align:center">Влажность воздуха</th>

                    <th style="word-wrap:break-word; font-size:small; text-align:center">Спрогнозированная температура</th>
                    <th style="word-wrap:break-word; font-size:small; text-align:center">Спрогнозированная влажность</th>

                    <th style="word-wrap:break-word; font-size:small; text-align:center">Точность прогноза температуры</th>
                    <th style="word-wrap:break-word; font-size:small; text-align:center">Точность прогноза влажности</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var record in _forecastings)
                {
                    <tr>
                        <td style="font-size:small; text-align:center">
                            @if (record.Time.HasValue)
                            {
                                @record.Time.Value.ToString("HH:mm:ss")
                                <br/>
                                @record.Time.Value.ToString("dd:MM:yyyy")
                            }
                            else
                            {
                                @NoValueString;
                            }
                        </td>
                        <td style="font-size:small; text-align:center">
                            @(record.Feature is null ? NoValueString : record.Feature.ClusterLoad.ToString(CultureInfo.InvariantCulture))
                        </td>
                        <td style="font-size:small; text-align:center">
                            @(record.Feature is null ? NoValueString : record.Feature.CpuUsage.ToString(CultureInfo.InvariantCulture))
                        </td>
                        <td style="font-size:small; text-align:center">
                            @(record.Feature is null ? NoValueString : record.Feature.ClusterTemperature.ToString(CultureInfo.InvariantCulture))
                        </td>
                        <td style="font-size:small; text-align:center">
                            @(record.Feature is null ? NoValueString : record.Feature.AirHumidityOutside.ToString(CultureInfo.InvariantCulture))
                        </td>
                        <td style="font-size:small; text-align:center">
                            @(record.Feature is null ? NoValueString : record.Feature.AirDryTemperatureOutside.ToString(CultureInfo.InvariantCulture))
                        </td>
                        <td style="font-size:small; text-align:center">
                            @(record.Feature is null ? NoValueString : record.Feature.AirWetTemperatureOutside.ToString(CultureInfo.InvariantCulture))
                        </td>
                        <td style="font-size:small; text-align:center">
                            @(record.Feature is null ? NoValueString : record.Feature.WindSpeed.ToString(CultureInfo.InvariantCulture))
                        </td>
                        <td style="font-size:small; text-align:center">
                            @(record.Feature is null ? NoValueString : record.Feature.WindDirection.ToString(CultureInfo.InvariantCulture))
                        </td>
                        <td style="font-size:small; text-align:center">
                            @(record.Feature is null ? NoValueString : record.Feature.WindEnthalpy.ToString(CultureInfo.InvariantCulture))
                        </td>
                        <td style="font-size:small; text-align:center">
                            @(record.Feature is null ? NoValueString : record.Feature.CoolingValue.ToString(CultureInfo.InvariantCulture))
                        </td>

                        <td style="font-size:small; text-align:center">
                            @(record.Feature is null ? NoValueString : record.Feature.Temperature.ToString(CultureInfo.InvariantCulture))
                        </td>
                        <td style="font-size:small; text-align:center">
                            @(record.Feature is null ? NoValueString : record.Feature.Humidity.ToString(CultureInfo.InvariantCulture))
                        </td>

                        <td style="font-size:small; text-align:center">
                            @(record.Fact is null ? NoValueString : record.Fact.Temperature.ToString(CultureInfo.InvariantCulture))
                        </td>
                        <td style="font-size:small; text-align:center">
                            @(record.Fact is null ? NoValueString : record.Fact.Humidity.ToString(CultureInfo.InvariantCulture))
                        </td>

                        <td style="font-size:small; text-align:center">
                            @(record.Label is null ? NoValueString : record.Label.Temperature.ToString(CultureInfo.InvariantCulture))
                        </td>
                        <td style="font-size:small; text-align:center">
                            @(record.Label is null ? NoValueString : record.Label.Humidity.ToString(CultureInfo.InvariantCulture))
                        </td>
                    </tr>
                }
                </tbody>
            </table>

            <br/>

            <PaginationComponent
                RecordsCount=@_forecastingsRecordsCount
                RecordsPerPage=@RecordsPerPage
                PageChanged=@OnPageChanged/>

            <br/>
        }
    </Authorized>
    <NotAuthorized>
        Вы не вошли в систему
    </NotAuthorized>
</AuthorizeView>

@code {
    private const int RecordsPerPage = 15;
    private const int StartRecordsRequestCount = 0;
    private const string NoValueString = "-";
    private bool _isInitialized;

    private List<ForecastDto> _forecastings;
    private long _forecastingsRecordsCount;

    protected override async Task OnInitializedAsync()
    {
        _forecastingsRecordsCount = await ForecastService.GetForecastsCountAsync();

        _forecastings = await ForecastService.GetForecastsAsync(StartRecordsRequestCount, RecordsPerPage);

        _isInitialized = true;
    }

    private async Task OnPageChanged(RecordsRequest request)
    {
        _forecastings = await ForecastService.GetForecastsAsync(request.RecordsOffset, request.RecordsCount);
    }
}