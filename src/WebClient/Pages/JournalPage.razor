@page "/journalpage"
@using System.Globalization
@using WebClient.PaginationNavigation
@inject IForecastService ForecastService

<PageTitle>Journal Page</PageTitle>

<h3>Архив</h3>

<AuthorizeView>
    <Authorized>
        @if (_isInitialized is false)
        {
            <strong style="text-align:center; align-self:center">
                Загрузка...
            </strong>
        }
        else
        {
            if (_forecast is not null)
            {
                <h4 align="center">Исходные данные</h4>

                <br/>

                <table class="table-bordered" align="center">
                    <thead>
                        <tr>
                            <th style="word-wrap:break-word; font-size:small; text-align:center">Вемя</th>
                            <th style="word-wrap:break-word; font-size:small; text-align:center">Температура внутри</th>
                            <th style="word-wrap:break-word; font-size:small; text-align:center">Температура снаружи</th>
                            <th style="word-wrap:break-word; font-size:small; text-align:center">Мощность охлаждения</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td style="font-size:small; text-align:center">
                                @_forecast.Time.ToString("HH:mm:ss dd.MM.yyyy")
                            </td>
                            <td style="font-size:small; text-align:center">
                                @_forecast.Feature.TemperatureInside.ToString(CultureInfo.InvariantCulture)
                            </td>                         
                            <td style="font-size:small; text-align:center">
                                @_forecast.Feature.TemperatureOutside.ToString(CultureInfo.InvariantCulture)
                            </td>
                            <td style="font-size:small; text-align:center">
                                @_forecast.Feature.CoolingPower.ToString(CultureInfo.InvariantCulture)
                            </td>
                        </tr>
                    </tbody>
                </table>

                <br/>

                <h4 align="center">Прогноз</h4>

                <br/>

                <table class="table-bordered" align="center">
                    <thead>
                        <tr>
                            <th style="word-wrap:break-word; font-size:small; text-align:center">Вемя</th>
                            <th style="word-wrap:break-word; font-size:small; text-align:center">Прогноз</th>
                            <th style="word-wrap:break-word; font-size:small; text-align:center">Предупреждение</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < _forecast.Predictions.Count; i++)
                        {
                            var predictionTime = _forecast.Time.AddMinutes(10 * (i + 1));

                            <tr>
                                <td style="font-size:small; text-align:center">
                                    @predictionTime.ToString("HH:mm:ss dd.MM.yyyy")
                                </td>
                                <td style="font-size:small; text-align:center">
                                    @_forecast.Predictions[i].Value.ToString(CultureInfo.InvariantCulture)
                                </td>
                                <td style="font-size:small; text-align:center">
                                    @_forecast.Predictions[i].Warning?.Message.ToString(CultureInfo.InvariantCulture)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }

            <br/>

            <PaginationComponent
                RecordsCount=@_forecastingsRecordsCount
                RecordsPerPage=@RecordsPerPage
                PageChanged=@OnPageChanged/>

            <br/>
        }
    </Authorized>
    <NotAuthorized>
        Вы не вошли в систему
    </NotAuthorized>
</AuthorizeView>

@code {
    private const int RecordsPerPage = 1;
    private const int StartRecordsRequestCount = 0;
    private const string NoValueString = "-";
    private bool _isInitialized;

    private ForecastDto? _forecast;
    private long _forecastingsRecordsCount;

    protected override async Task OnInitializedAsync()
    {
        _forecastingsRecordsCount = await ForecastService.GetForecastsCountAsync();

        _forecast = await ForecastService.GetForecastAsync(StartRecordsRequestCount);

        _isInitialized = true;
    }

    private async Task OnPageChanged(RecordsRequest request)
    {
       _forecast = await ForecastService.GetForecastAsync(request.RecordsOffset);
    }
}