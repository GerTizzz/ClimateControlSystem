@page "/configspage"
@using WebClient.Services.ConfigService
@using Microsoft.AspNetCore.Components
@attribute [Authorize(Roles = "Admin")]
@inject IConfigService ConfigService
@inject IJSRuntime JsRuntime

<PageTitle>Configs Page</PageTitle>

<h3>Настройки конфигурации</h3>

<EditForm Model="_config" OnSubmit="HandleSubmit">
    <div>
        <label for="uppTempWarn">Верхний тревожный предел температуры, C</label>
        <InputNumber id="uppTempWarn" @bind-Value="_config.UpperTemperatureWarningLimit"/>
    </div>
    <div>
        <label for="lowTempWarn">Нижний тревожный предел температуры, C</label>
        <InputNumber id="lowTempWarn" @bind-Value="_config.LowerTemperatureWarningLimit"/>
    </div>
    <br/>
    <button type="submit" class="btn btn-primary">Сохранить</button>
</EditForm>

@code {
    private ConfigsDto _config = new ConfigsDto();

    protected override async Task OnInitializedAsync()
    {
        _config = await ConfigService.GetConfigAsync();
    }

    async Task HandleSubmit()
    {
        if (_config.UpperTemperatureWarningLimit < 0)
        {
            await JsRuntime.InvokeVoidAsync("Alert", "Некорректное значение верхнего предела!");
        }
        if (_config.LowerTemperatureWarningLimit < 0)
        {
            await JsRuntime.InvokeVoidAsync("Alert", "Некорректное значение нижнего предела!");
        }

        var isUpdated = await ConfigService.UpdateConfigAsync(_config);

        if (isUpdated is false)
        {
            _config = await ConfigService.GetConfigAsync();
        }
    }
}