@page "/eventspage"
@using WebClient.PaginationNavigation
@inject IForecastService ForecastService

<PageTitle>Events Page</PageTitle>

<h3>События</h3>

<AuthorizeView>
    <Authorized>
        @if (_warnings is null || _warnings.Any() is false)
        {
            <p><em>Загрузка...</em></p>
        }
        else
        {
            <p>События температуры</p>
            <table class="table">
                <thead>
                    <tr>
                        <th style="word-wrap:break-word; font-size:small">Статус</th>
                        <th style="word-wrap:break-word; font-size:small">Сообщение</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var temperatureWarning in _warnings.Select(warning => warning.Temperature).ToList())
                    {
                        @if (temperatureWarning.HasValue is false)
                        {
                            continue;
                        }

                        <tr>
                            <td style="font-size:small"><span class="oi oi-warning ico" aria-hidden="true" style="color:red"></span></td>
                            <td>Ожидается критическое значение температуры! На @temperatureWarning.ToString(), °C!</td>
                        </tr>
                    }
                </tbody>
            </table>       
            
            <p>События влажности</p>
            <table class="table">
                <thead>
                    <tr>
                        <th style="word-wrap:break-word; font-size:small">Статус</th>
                        <th style="word-wrap:break-word; font-size:small">Сообщение</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var humidityWarning in _warnings.Select(warning => warning.Humidity).ToList())
                    {
                        @if (humidityWarning.HasValue is false)
                        {
                            continue;
                        }

                        <tr>
                            <td style="font-size:small"><span class="oi oi-warning" aria-hidden="true" style="color:red"></span></td>
                            <td>Ожидается критическое значение влажности! На @humidityWarning.ToString(), %!</td>
                        </tr>
                    }
                </tbody>
            </table>
            
            <br/>

            <PaginationComponent RecordsCount=@_warningsCount
                                 RecordsPerPage=@RecordsPerPage
                                 PageChanged=@OnPageChanged/>

            <br/>
        }
    </Authorized>
    <NotAuthorized>
        Вы не вошли в систему
    </NotAuthorized>
</AuthorizeView>

@code {
    private const int RecordsPerPage = 15;
    private const int StartRecordsRequestCount = 0;

    private long _warningsCount;
    private List<WarningDto> _warnings;

    protected override async Task OnInitializedAsync()
    {
        _warningsCount = await ForecastService.GetWarningsCountAsync();

        _warnings = await ForecastService.GetWarningsAsync(StartRecordsRequestCount, RecordsPerPage);
    }

    private async Task OnPageChanged(RecordsRequest request)
    {
        _warnings.Clear();
        
        _warnings = await ForecastService.GetWarningsAsync(request.RecordsOffset, request.RecordsCount);
    }
}
