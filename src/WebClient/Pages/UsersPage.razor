@page "/userspage"
@using Shared.NewFolder;
@using WebClient.Services.UsersService
@inject NavigationManager NavigationManager
@inject IUsersService UsersService
@attribute [Authorize(Roles = "Admin")]

<h3>Пользователи</h3>

<AuthorizeView>
    <Authorized>
        @if (_isInitialized is false)
        {
            <strong style="text-align:center; align-self:center">
                Загрузка...
            </strong>
        }
        else if (_users.Count == 0)
        {
            <strong style="text-align:center; font-size:large">
                Нет данных для отображения...
            </strong>
        }
        else
        {
            <table class="table">
                <thead>
                <tr>
                    <th>Имя</th>
                    <th>Роль</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                @foreach (var user in _users)
                {
                    <tr>
                        <td>@user.Name</td>
                        <td>@user.Role</td>
                        <td>
                            <button class="btn btn-primary" @onclick="() => ShowUser(user.Id)">
                                <i class="oi oi-pencil"></i>
                            </button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
            <button class="btn btn-primary" @onclick="CreateUser">Создать нового пользователя</button>
        }
    </Authorized>
    <NotAuthorized>
        Вы не вошли в систему
    </NotAuthorized>
</AuthorizeView>

@code {
    private readonly List<UserDto> _users = new();
    private bool _isInitialized;

    protected override async Task OnInitializedAsync()
    {
        _users.AddRange(await UsersService.GetUsers());

        _isInitialized = true;
    }

    void ShowUser(Guid id)
    {
        var userId = GuidBase64.Encode(id);
        NavigationManager.NavigateTo($"/user/{userId}");
    }

    void CreateUser()
    {
        var userId = GuidBase64.Encode(default(Guid));
        NavigationManager.NavigateTo($"/user/{userId}");
    }

}