@page "/predictionsjournal"
@inject IClimateService ClimateService

<PageTitle>Predictions Journal</PageTitle>

<h3>Журнал прогнозов</h3>


<AuthorizeView>
    <Authorized>
        @if (Monitorings == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th style="word-wrap:break-word">Measuring time</th>
                        <th style="word-wrap:break-word">Cluster load</th>
                        <th style="word-wrap:break-word">CPU usage</th>
                        <th style="word-wrap:break-word">Cluster T</th>
                        <th style="word-wrap:break-word">Current T</th>
                        <th style="word-wrap:break-word">Current H</th>
                        <th style="word-wrap:break-word">Outside H</th>
                        <th style="word-wrap:break-word">Dry T outside</th>
                        <th style="word-wrap:break-word">Wet T outside</th>
                        <th style="word-wrap:break-word">Wind speed outside</th>
                        <th style="word-wrap:break-word">Wind direction</th>
                        <th style="word-wrap:break-word">Air enthalpy</th>
                        <th style="word-wrap:break-word">Cooling mean</th>
                        <th style="word-wrap:break-word">Predicted T</th>
                        <th style="word-wrap:break-word">Predicted H</th>
                        <th style="word-wrap:break-word">T accuracy</th>
                        <th style="word-wrap:break-word">H accuracy</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var record in Monitorings)
                    {
                        <tr>
                            <td style="font-size:small">@record.MeasurementTime.ToString("HH:mm:ss")<br/>@record.MeasurementTime.ToString("dd:MM:yyyy")</td>
@*                            <td>@record.ClusterLoad</td>
                            <td>@record.CpuUsage</td>
                            <td>@record.ClusterTemperature</td>
                            <td>@record.PreviousTemperature</td>
                            <td>@record.PreviousHumidity</td>
                            <td>@record.AirHumidityOutside</td>
                            <td>@record.AirDryTemperatureOutside</td>
                            <td>@record.AirWetTemperatureOutside</td>
                            <td>@record.WindSpeed</td>
                            <td>@record.WindDirection</td>
                            <td>@record.WindEnthalpy</td>
                            <td>@record.MeanCoolingValue</td>*@
                            <td>@record.PredictedTemperature</td>
                            <td>@record.PredictedHumidity</td>
@*                            <td>@record.PredictedTemperatureAccuracy</td>
                            <td>@record.PredictedHumidityAccuracy</td>*@
                        </tr>
                    }
                </tbody>
            </table>
        }
    </Authorized>
    <NotAuthorized>
        Вы не вошли в систему
    </NotAuthorized>
</AuthorizeView>

@code {
    private List<Prediction> Monitorings;

    protected override async Task OnInitializedAsync()
    {
        Monitorings = await ClimateService.GetClimatePredictionsAsync(25);
    }
}