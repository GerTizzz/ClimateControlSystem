@page "/journalpage"
@using ClimateControlSystem.Client.PaginationNavigation;
@using ClimateControlSystem.Shared.SendToClient;
@inject IMicroclimateService MicroclimateService

<PageTitle>Journal Page</PageTitle>

<h3>Журнал прогнозов</h3>

<AuthorizeView>
    <Authorized>
        @if (_climatesData == null)
        {
            <p><em>Загрузка...</em></p>
        }
        else
        {
            <table class="table-bordered" align="center">
                <thead>
                    <tr>
                        <th style="word-wrap:break-word; font-size:small; text-align:center">Время измерения</th>
                        <th style="word-wrap:break-word; font-size:small; text-align:center">Загрузка кластера</th>
                        <th style="word-wrap:break-word; font-size:small; text-align:center">Использование ЦПУ</th>
                        <th style="word-wrap:break-word; font-size:small; text-align:center">Температура кластера</th>
                        <th style="word-wrap:break-word; font-size:small; text-align:center">Температура воздуха</th>
                        <th style="word-wrap:break-word; font-size:small; text-align:center">Влажность воздуха</th>
                        <th style="word-wrap:break-word; font-size:small; text-align:center">Влажность снаружи</th>
                        <th style="word-wrap:break-word; font-size:small; text-align:center">Сухая температура снаружи</th>
                        <th style="word-wrap:break-word; font-size:small; text-align:center">Влажная температура снаружи</th>
                        <th style="word-wrap:break-word; font-size:small; text-align:center">Скорость ветра снаружи</th>
                        <th style="word-wrap:break-word; font-size:small; text-align:center">Направления ветра снаружи</th>
                        <th style="word-wrap:break-word; font-size:small; text-align:center">Энтальпия воздуха снаружи</th>
                        <th style="word-wrap:break-word; font-size:small; text-align:center">Температура охлаждения</th>
                        <th style="word-wrap:break-word; font-size:small; text-align:center">Спрогнозированная температура</th>
                        <th style="word-wrap:break-word; font-size:small; text-align:center">Спрогнозированная влажность</th>
                        <th style="word-wrap:break-word; font-size:small; text-align:center">Точность прогноза температуры</th>
                        <th style="word-wrap:break-word; font-size:small; text-align:center">Точность прогноза влажности</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var record in _climatesData)
                    {
                        <tr>
                            <td style="font-size:small; text-align:center">
                                @if (record.MeasurementTime.HasValue)
                                {
                                    @record.MeasurementTime.Value.ToString("HH:mm:ss")
                                    <br/>
                                    @record.MeasurementTime.Value.ToString("dd:MM:yyyy")
                                }
                            </td>
                            <td style="font-size:small; text-align:center">@record.ClusterLoad</td>
                            <td style="font-size:small; text-align:center">@record.CpuUsage</td>
                            <td style="font-size:small; text-align:center">@record.ClusterTemperature</td>
                            <td style="font-size:small; text-align:center">@record.CurrentRealTemperature</td>
                            <td style="font-size:small; text-align:center">@record.CurrentRealHumidity</td>
                            <td style="font-size:small; text-align:center">@record.AirHumidityOutside</td>
                            <td style="font-size:small; text-align:center">@record.AirDryTemperatureOutside</td>
                            <td style="font-size:small; text-align:center">@record.AirWetTemperatureOutside</td>
                            <td style="font-size:small; text-align:center">@record.WindSpeed</td>
                            <td style="font-size:small; text-align:center">@record.WindDirection</td>
                            <td style="font-size:small; text-align:center">@record.WindEnthalpy</td>
                            <td style="font-size:small; text-align:center">@record.MeanCoolingValue</td>
                            <td style="font-size:small; text-align:center">@record.PredictedFutureTemperature</td>
                            <td style="font-size:small; text-align:center">@record.PredictedFutureHumidity</td>
                            <td style="font-size:small; text-align:center">@record.PredictedTemperatureAccuracy</td>
                            <td style="font-size:small; text-align:center">@record.PredictedHumidityAccuracy</td>
                        </tr>
                    }
                </tbody>
            </table>

            <br />

            <ClimateControlSystem.Client.Components.PaginationComponent 
            RecordsCount=@_microclimateRecordsCount
            RecordsPerPage=@RecordsPerPage
            PageChanged=@OnPageChanged/>

            <br />
        }
    </Authorized>
    <NotAuthorized>
        Вы не вошли в систему
    </NotAuthorized>
</AuthorizeView>

@code {
    private List<MicroclimateDTO> _climatesData;
    private int _microclimateRecordsCount;
    private const int RecordsPerPage = 15;

    protected override async Task OnInitializedAsync()
    {
        _microclimateRecordsCount = await MicroclimateService.GetMicroclimatesCount();

        _climatesData = (await MicroclimateService.GetMicroclimatesAsync(0, RecordsPerPage)).ToList();
    }

    private async Task OnPageChanged(RecordsRequest request)
    {
        _climatesData = (await MicroclimateService.GetMicroclimatesAsync(request.RecordsOffset, request.RecordsCount)).ToList();
    }
}