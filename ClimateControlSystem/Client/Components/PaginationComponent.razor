@implements IAsyncDisposable
@using ClimateControlSystem.Client.PagesNavigation
@using ClimateControlSystem.Client.PaginationNavigation;

<table align="center">
    <tbody>
        <tr>
            @foreach (var pageButton in _paginationManager.PaginationButtons)
            {
                if (pageButton.IsEnabled)
                {
                    <td style="font-size:medium">
                        <button class="btn-primary" @onclick="@(e => pageButton.ChangePage())">
                            @(pageButton.Title)
                        </button>
                    </td>
                }
                else
                {
                    <td style="font-size:medium">

                    </td>
                }
            }
        </tr>
    </tbody>
</table>

@code {
    private PaginationButtonManager _paginationManager;

    [Parameter]
    public int RecordsCount { get; set; }
    [Parameter]
    public int RecordsPerPage { get; set; } 

    [Parameter]
    public EventCallback<RecordsRequest> PageChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _paginationManager = new PaginationButtonManager(RecordsCount, RecordsPerPage);

        _paginationManager.PageChangedEvent += OnPageChanged;
    }

    public void OnPageChanged(RecordsRequest request)
    {
        PageChanged.InvokeAsync(request);
        StateHasChanged();
    }

    public async ValueTask DisposeAsync()
    {
        if (_paginationManager is not null)
        {
            _paginationManager.PageChangedEvent -= OnPageChanged;
            _paginationManager.Close();
        }
    }
}
