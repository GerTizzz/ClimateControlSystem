// <auto-generated />
using ClimateControlSystem.Server.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace ClimateControlSystem.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221021062925_CreateInitial")]
    partial class CreateInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ClimateControlSystem.Server.Data.ClimateRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("AirDryTemperatureOutside")
                        .HasColumnType("real");

                    b.Property<float>("AirHumidityOutside")
                        .HasColumnType("real");

                    b.Property<float>("AirWetTemperatureOutside")
                        .HasColumnType("real");

                    b.Property<long>("ArrivedTimeTicks")
                        .HasColumnType("bigint");

                    b.Property<float>("ClusterLoad")
                        .HasColumnType("real");

                    b.Property<float>("ClusterTemperature")
                        .HasColumnType("real");

                    b.Property<float>("CpuUsage")
                        .HasColumnType("real");

                    b.Property<float>("MeanCoolingValue")
                        .HasColumnType("real");

                    b.Property<float>("PredictedHumidity")
                        .HasColumnType("real");

                    b.Property<float>("PredictedTemperature")
                        .HasColumnType("real");

                    b.Property<float>("PreviousHumidity")
                        .HasColumnType("real");

                    b.Property<float>("PreviousTemperature")
                        .HasColumnType("real");

                    b.Property<float>("WindDirection")
                        .HasColumnType("real");

                    b.Property<float>("WindEnthalpy")
                        .HasColumnType("real");

                    b.Property<float>("WindSpeed")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("PredictionResults");
                });
#pragma warning restore 612, 618
        }
    }
}
